#!/usr/bin/env python3
"""
This posts an announcement to all sections of the current course. The title and
text of the announcement is taken from the supplied file.
The file must be a markdown file with a YAML block which contains the title.
"""
import yaml
import canvas
import canvas_utils.course_conf as cnf
import argparse
import sys
from os import chdir, path

COURSEDIR = "~/Classes/"

parser = argparse.ArgumentParser(
    description="Post an announcement from a markdown file"
)
parser.add_argument('file', help="Markdown file. "
                    "Must include a YAML header with title field")
parser.add_argument('--course', dest="course", default=None,
                    help="Course to post to."
                    "Defaults to current course when in a course directory.\n"
                    "Must be one of courses in {}.".format(COURSEDIR))

args = parser.parse_args()

file = args.file

with open(file, 'r') as f:
    line = f.readline()
    if not line.startswith("---"):
        raise ValueError("YAML block missing!")
    yblock = []
    line = f.readline()
    while not line.startswith("---"):
        yblock += [line]
        line = f.readline()

    content = f.read()

yam = yaml.safe_load("".join(yblock))

title = yam['title']

if args.course is not None:
    try:
        chdir(path.expanduser(COURSEDIR + args.course))
    except FileNotFoundError:
        print("Could not find course {}!".format(args.course))
        sys.exit(1)

try:
    config = cnf.get_course_config()
except FileNotFoundError:
    print("Cannot find a course config file.\n"
          "Perhaps you are not in a course directory?")
    sys.exit(1)

canvas.read_access_token()

for classid in config['sections']:
    print(canvas.post_announcement_from_markdown(classid, title, content,
                                                 use_pandoc=True))
